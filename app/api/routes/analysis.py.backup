from fastapi import APIRouter, Depends, HTTPException
from sqlalchemy.orm import Session
from app.database import get_db
from app.models.cve import CVE
from app.services.ollama_service import OllamaService
from pydantic import BaseModel

router = APIRouter()

class AnalysisRequest(BaseModel):
    cve_id: str
    analysis_type: str = "comprehensive"

@router.post("/analyze")
async def analyze_cve(request: AnalysisRequest, db: Session = Depends(get_db)):
    """Analyze a CVE using AI models"""
    
    # Check if CVE exists
    cve = db.query(CVE).filter(CVE.cve_id == request.cve_id).first()
    if not cve:
        raise HTTPException(status_code=404, detail="CVE not found")
    
    # Perform AI analysis
    ollama_service = OllamaService()
    result = await ollama_service.analyze_cve(cve.to_dict())
    
    if not result["success"]:
        raise HTTPException(status_code=500, detail=f"Analysis failed: {result.get('error')}")
    
    return {
        "cve_id": request.cve_id,
        "analysis": result["analysis"],
        "model_used": result["model_used"]
    }
